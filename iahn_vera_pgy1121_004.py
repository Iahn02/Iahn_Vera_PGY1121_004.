# -*- coding: utf-8 -*-
"""Iahn_Vera_PGY1121_004.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cjWdAN3Gdo7yoYkO9uxxF-QzgyJ7wnVJ
"""

#Casa Feliz
import datetime

deptos_por_piso = 4
pisos = 10
deptos_disponibles = [['A', 'B', 'C', 'D'] for i in range(pisos)]
departamentos_vendidos = [[''] * deptos_por_piso for i in range(pisos)]
compradores = []
ganancias = 0
total_vendidos = 0
total_ganancias = 0
precios = {
    "A": 3800,
    "B": 3000,
    "C": 2800,
    "D": 3500
}

print("=== Bienvenido al Portal Inmobiliario ===")


def main():
    while True:
        mostrar_menu()
        op = input()

        if op == '1':
            comprar()

        elif op == '2':
            mostrar_deptos()

        elif op == '3':
            mostrar_compradores()

        elif op == '4':
            mostrar_ganancias()

        elif op == '5':
            salir()
            break

        else:
            print("Opción inválida. Intente nuevamente.")


def mostrar_menu():
    print("\t=== Casa Feliz - Menú ===\n")
    print("1. Comprar departamento")
    print("2. Mostrar departamentos disponibles")
    print("3. Ver listado de compradores")
    print("4. Mostrar ganancias totales")
    print("5. Salir")
    print("Seleccione una opción:")


def comprar():
    print("=== Comprar Departamento ===")
    mostrar_deptos()
    print()
    mostrar_precios()
    departamento_valido = False
    while not departamento_valido:
        try:
            piso = int(input("\nIngrese el número de piso del departamento que desea (1-10):\n\n"))
            tipo_depto = input("Ingrese el tipo de departamento (A, B, C, D):\n\n").upper()

            if piso < 1 or piso > pisos or tipo_depto not in ['A', 'B', 'C', 'D']:
                print("Departamento inválido. Intente nuevamente.")
                continue

            fila = piso - 1
            columna = ord(tipo_depto) - ord('A')

            if departamentos_vendidos[fila][columna]:
                print("El departamento no está disponible.")

            else:
                run = input("Ingrese el RUN del comprador sin puntos ni guion:\n\n")
                if len(run) != 9:
                  print("Ingrese Run válido")
                  return
                else:
                  compradores.append((run, piso, tipo_depto))
                  departamentos_vendidos[fila][columna] = tipo_depto
                  departamento_valido = True
                  print("\nOperación realizada correctamente.")
                  print("------------------------------------")
                  print(f"El departamento comprado es: {piso}{tipo_depto}")
                  valores(tipo_depto)
                  print(f"Por el valor de: {precios[tipo_depto]} UF\n")
                  print("------------------------------------")
        except ValueError:
            print("Entrada inválida. Intente nuevamente.")


def mostrar_deptos():
    print("=== Departamentos Disponibles ===\n")
    print("Piso\tDepartamentos")
    for piso in range(pisos):
        fila_departamentos = ""
        for i, tipo_departamento in enumerate(deptos_disponibles[piso]):
            if departamentos_vendidos[piso][i]:
                fila_departamentos += 'X\t'
            else:
                fila_departamentos += tipo_departamento + '\t'
        print(f"{piso + 1}\t{fila_departamentos}")


def valores(tipo_depto):
    global ganancias, total_vendidos, total_ganancias
    ganancias += precios[tipo_depto]
    total_vendidos += 1
    total_ganancias += precios[tipo_depto]


def mostrar_precios():
    print("\nPrecios de Departamentos:")
    for tipo, precio in precios.items():
        print(f"Tipo {tipo}, {precio} UF")


def mostrar_compradores():
    print("===== Listado de Compradores =====")
    compradores_ordenados = sorted(compradores, key=lambda x: int(x[0]))
    for comprador in compradores_ordenados:
        print(f"\nRUN: {comprador[0]}, Departamento: {comprador[1]}{comprador[2]}\n")


def mostrar_ganancias():
    print("===== Ganancias Totales =====")
    print("Tipo de departamento\tPrecio\tCantidad vendida\tGanancias")
    for tipo, precio in precios.items():
        vendidos_tipo = sum([1 for piso in departamentos_vendidos for d in piso if d == tipo])
        ganancias_tipo = vendidos_tipo * precio
        print(f"{tipo}\t\t\t{precio} UF\t\t{vendidos_tipo}\t\t{ganancias_tipo} UF")

    print(f"TOTAL\t\t\t\t\t{total_vendidos}\t\t{total_ganancias} UF")

def obtener_fecha_actual():
    fecha_actual = datetime.datetime.now()
    return fecha_actual.strftime("%d/%m/%Y")


def salir():
    fecha_salida = obtener_fecha_actual()
    print("Saliendo del sistema...")
    print(f"Iahn Vera\nFecha de salida: {fecha_salida}")



main()